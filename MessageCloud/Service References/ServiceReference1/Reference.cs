//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace MessageCloud.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITwitter")]
    public interface ITwitter {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITwitter/GetTimeline", ReplyAction="http://tempuri.org/ITwitter/GetTimelineResponse")]
        System.IAsyncResult BeginGetTimeline(System.AsyncCallback callback, object asyncState);
        
        string EndGetTimeline(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITwitter/GetTimelineSince", ReplyAction="http://tempuri.org/ITwitter/GetTimelineSinceResponse")]
        System.IAsyncResult BeginGetTimelineSince(long id, System.AsyncCallback callback, object asyncState);
        
        string EndGetTimelineSince(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITwitter/Favorite", ReplyAction="http://tempuri.org/ITwitter/FavoriteResponse")]
        System.IAsyncResult BeginFavorite(long statusID, System.AsyncCallback callback, object asyncState);
        
        string EndFavorite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITwitter/GetStatus", ReplyAction="http://tempuri.org/ITwitter/GetStatusResponse")]
        System.IAsyncResult BeginGetStatus(long statusID, System.AsyncCallback callback, object asyncState);
        
        string EndGetStatus(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITwitterChannel : MessageCloud.ServiceReference1.ITwitter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimelineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimelineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimelineSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimelineSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FavoriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FavoriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TwitterClient : System.ServiceModel.ClientBase<MessageCloud.ServiceReference1.ITwitter>, MessageCloud.ServiceReference1.ITwitter {
        
        private BeginOperationDelegate onBeginGetTimelineDelegate;
        
        private EndOperationDelegate onEndGetTimelineDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimelineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimelineSinceDelegate;
        
        private EndOperationDelegate onEndGetTimelineSinceDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimelineSinceCompletedDelegate;
        
        private BeginOperationDelegate onBeginFavoriteDelegate;
        
        private EndOperationDelegate onEndFavoriteDelegate;
        
        private System.Threading.SendOrPostCallback onFavoriteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusDelegate;
        
        private EndOperationDelegate onEndGetStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TwitterClient() {
        }
        
        public TwitterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TwitterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TwitterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TwitterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetTimelineCompletedEventArgs> GetTimelineCompleted;
        
        public event System.EventHandler<GetTimelineSinceCompletedEventArgs> GetTimelineSinceCompleted;
        
        public event System.EventHandler<FavoriteCompletedEventArgs> FavoriteCompleted;
        
        public event System.EventHandler<GetStatusCompletedEventArgs> GetStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MessageCloud.ServiceReference1.ITwitter.BeginGetTimeline(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeline(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MessageCloud.ServiceReference1.ITwitter.EndGetTimeline(System.IAsyncResult result) {
            return base.Channel.EndGetTimeline(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeline(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MessageCloud.ServiceReference1.ITwitter)(this)).BeginGetTimeline(callback, asyncState);
        }
        
        private object[] OnEndGetTimeline(System.IAsyncResult result) {
            string retVal = ((MessageCloud.ServiceReference1.ITwitter)(this)).EndGetTimeline(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimelineCompleted(object state) {
            if ((this.GetTimelineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimelineCompleted(this, new GetTimelineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimelineAsync() {
            this.GetTimelineAsync(null);
        }
        
        public void GetTimelineAsync(object userState) {
            if ((this.onBeginGetTimelineDelegate == null)) {
                this.onBeginGetTimelineDelegate = new BeginOperationDelegate(this.OnBeginGetTimeline);
            }
            if ((this.onEndGetTimelineDelegate == null)) {
                this.onEndGetTimelineDelegate = new EndOperationDelegate(this.OnEndGetTimeline);
            }
            if ((this.onGetTimelineCompletedDelegate == null)) {
                this.onGetTimelineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimelineCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimelineDelegate, null, this.onEndGetTimelineDelegate, this.onGetTimelineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MessageCloud.ServiceReference1.ITwitter.BeginGetTimelineSince(long id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimelineSince(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MessageCloud.ServiceReference1.ITwitter.EndGetTimelineSince(System.IAsyncResult result) {
            return base.Channel.EndGetTimelineSince(result);
        }
        
        private System.IAsyncResult OnBeginGetTimelineSince(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long id = ((long)(inValues[0]));
            return ((MessageCloud.ServiceReference1.ITwitter)(this)).BeginGetTimelineSince(id, callback, asyncState);
        }
        
        private object[] OnEndGetTimelineSince(System.IAsyncResult result) {
            string retVal = ((MessageCloud.ServiceReference1.ITwitter)(this)).EndGetTimelineSince(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimelineSinceCompleted(object state) {
            if ((this.GetTimelineSinceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimelineSinceCompleted(this, new GetTimelineSinceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimelineSinceAsync(long id) {
            this.GetTimelineSinceAsync(id, null);
        }
        
        public void GetTimelineSinceAsync(long id, object userState) {
            if ((this.onBeginGetTimelineSinceDelegate == null)) {
                this.onBeginGetTimelineSinceDelegate = new BeginOperationDelegate(this.OnBeginGetTimelineSince);
            }
            if ((this.onEndGetTimelineSinceDelegate == null)) {
                this.onEndGetTimelineSinceDelegate = new EndOperationDelegate(this.OnEndGetTimelineSince);
            }
            if ((this.onGetTimelineSinceCompletedDelegate == null)) {
                this.onGetTimelineSinceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimelineSinceCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimelineSinceDelegate, new object[] {
                        id}, this.onEndGetTimelineSinceDelegate, this.onGetTimelineSinceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MessageCloud.ServiceReference1.ITwitter.BeginFavorite(long statusID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFavorite(statusID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MessageCloud.ServiceReference1.ITwitter.EndFavorite(System.IAsyncResult result) {
            return base.Channel.EndFavorite(result);
        }
        
        private System.IAsyncResult OnBeginFavorite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long statusID = ((long)(inValues[0]));
            return ((MessageCloud.ServiceReference1.ITwitter)(this)).BeginFavorite(statusID, callback, asyncState);
        }
        
        private object[] OnEndFavorite(System.IAsyncResult result) {
            string retVal = ((MessageCloud.ServiceReference1.ITwitter)(this)).EndFavorite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFavoriteCompleted(object state) {
            if ((this.FavoriteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FavoriteCompleted(this, new FavoriteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FavoriteAsync(long statusID) {
            this.FavoriteAsync(statusID, null);
        }
        
        public void FavoriteAsync(long statusID, object userState) {
            if ((this.onBeginFavoriteDelegate == null)) {
                this.onBeginFavoriteDelegate = new BeginOperationDelegate(this.OnBeginFavorite);
            }
            if ((this.onEndFavoriteDelegate == null)) {
                this.onEndFavoriteDelegate = new EndOperationDelegate(this.OnEndFavorite);
            }
            if ((this.onFavoriteCompletedDelegate == null)) {
                this.onFavoriteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFavoriteCompleted);
            }
            base.InvokeAsync(this.onBeginFavoriteDelegate, new object[] {
                        statusID}, this.onEndFavoriteDelegate, this.onFavoriteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MessageCloud.ServiceReference1.ITwitter.BeginGetStatus(long statusID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatus(statusID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MessageCloud.ServiceReference1.ITwitter.EndGetStatus(System.IAsyncResult result) {
            return base.Channel.EndGetStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long statusID = ((long)(inValues[0]));
            return ((MessageCloud.ServiceReference1.ITwitter)(this)).BeginGetStatus(statusID, callback, asyncState);
        }
        
        private object[] OnEndGetStatus(System.IAsyncResult result) {
            string retVal = ((MessageCloud.ServiceReference1.ITwitter)(this)).EndGetStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusCompleted(object state) {
            if ((this.GetStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusAsync(long statusID) {
            this.GetStatusAsync(statusID, null);
        }
        
        public void GetStatusAsync(long statusID, object userState) {
            if ((this.onBeginGetStatusDelegate == null)) {
                this.onBeginGetStatusDelegate = new BeginOperationDelegate(this.OnBeginGetStatus);
            }
            if ((this.onEndGetStatusDelegate == null)) {
                this.onEndGetStatusDelegate = new EndOperationDelegate(this.OnEndGetStatus);
            }
            if ((this.onGetStatusCompletedDelegate == null)) {
                this.onGetStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusDelegate, new object[] {
                        statusID}, this.onEndGetStatusDelegate, this.onGetStatusCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MessageCloud.ServiceReference1.ITwitter CreateChannel() {
            return new TwitterClientChannel(this);
        }
        
        private class TwitterClientChannel : ChannelBase<MessageCloud.ServiceReference1.ITwitter>, MessageCloud.ServiceReference1.ITwitter {
            
            public TwitterClientChannel(System.ServiceModel.ClientBase<MessageCloud.ServiceReference1.ITwitter> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTimeline(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTimeline", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetTimeline(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetTimeline", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimelineSince(long id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetTimelineSince", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetTimelineSince(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetTimelineSince", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFavorite(long statusID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = statusID;
                System.IAsyncResult _result = base.BeginInvoke("Favorite", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFavorite(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Favorite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStatus(long statusID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = statusID;
                System.IAsyncResult _result = base.BeginInvoke("GetStatus", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStatus", _args, result)));
                return _result;
            }
        }
    }
}
